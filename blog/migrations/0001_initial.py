# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-06 17:29
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=512, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_date', models.DateTimeField(auto_now=True)),
                ('comment_text', models.TextField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=512, unique=True)),
                ('item_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('item_price', models.IntegerField(default='100')),
                ('item_description', models.TextField(blank=True, max_length=512)),
                ('release_date', models.DateField(default='2016-12-12')),
                ('item_status', models.CharField(choices=[('a', 'Avialable'), ('na', 'Not Avialable')], max_length=2)),
                ('item_rating', models.DecimalField(decimal_places=1, default=0.0, editable=False, max_digits=2)),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Authors')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(default='1994-12-13')),
                ('order_adress', models.CharField(default='None', max_length=100)),
                ('order_status', models.CharField(choices=[('p', 'Packing'), ('d', 'Delivering'), ('f', 'Delivered'), ('c', 'Cancelled')], max_length=2)),
                ('order_comment', models.TextField(blank=True, max_length=512)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Items')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Publishers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher_name', models.CharField(max_length=512, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='items',
            name='item_genre',
            field=models.ManyToManyField(related_name='p', to='blog.Tags'),
        ),
        migrations.AddField(
            model_name='items',
            name='item_publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Publishers'),
        ),
        migrations.AddField(
            model_name='comments',
            name='item_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Items'),
        ),
        migrations.AddField(
            model_name='comments',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
